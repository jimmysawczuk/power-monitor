name: Release
on:
  release:
    types: [published]
  push:
    branches: [master]
jobs:
  build_release:
    name: Build release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: jimmysawczuk/power-monitor-web
          ref: main
          path: frontend
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: Get tag
        id: tag
        uses: jimmysawczuk/actions/github/get-tag-from-ref@main
        with:
          ref: ${{ github.ref }}
      - name: Set PATH
        run: |
          mkdir -p ~/bin
          echo "$HOME/bin" >> $GITHUB_PATH
      - name: Install tools
        run: |
          wget -q https://github.com/jimmysawczuk/tmpl/releases/download/v3.2.3/tmpl-v3.2.3-linux-amd64
          mv tmpl-v3.2.3-linux-amd64 $HOME/bin/tmpl
          chmod +x $HOME/bin/tmpl

          wget -q https://github.com/jimmysawczuk/scm-status/releases/download/v2.3.0/scm-status-v2.3.0-linux-amd64
          mv scm-status-v2.3.0-linux-amd64 $HOME/bin/scm-status
          chmod +x $HOME/bin/scm-status

          wget -q https://github.com/jimmysawczuk/go-bindata/releases/download/v3.1.3/go-bindata-v3.1.3-linux-amd64
          mv go-bindata-v3.1.3-linux-amd64 $HOME/bin/go-bindata
          chmod +x $HOME/bin/go-bindata
      - name: Set NPM Auth
        run: |
          echo '@fortawesome:registry=https://npm.fontawesome.com/' > ~/.npmrc
          echo '//npm.fontawesome.com/:_authToken=${{ secrets.FONTAWESOME_AUTH_TOKEN }}' >> ~/.npmrc
      - name: Building frontend
        working-directory: frontend
        run: |
          scm-status
          yarn
          yarn build
      - name: Packaging static assets
        run: |
          go-bindata -o ./cmd/power-monitor/static.go -pkg main -prefix frontend/public frontend/public/...
      - name: Build binary
        run: |
          BUILDTAGS="-X main.version=$(scm-status | jq -r 'if .tags | length == 0 then "" else .tags[0] end') -X main.revision=$(scm-status | jq -r '.hex.short') -X main.date=$(date --iso-8601=seconds)"
          echo $BUILDTAGS
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o power-monitor-${{ steps.tag.outputs.tag }}-linux-amd64 -ldflags "-s -d -w $BUILDTAGS" -mod=vendor ./cmd/power-monitor
      - name: Get upload URL
        if: ${{ github.event_name == 'release' }}
        id: get_upload_url
        run: |
          UPLOAD_URL=$(cat $GITHUB_EVENT_PATH | jq -r '.release.upload_url')
          echo $UPLOAD_URL
          echo "::set-output name=uploadURL::$UPLOAD_URL"
      - name: Upload build (linux, amd64)
        if: ${{ github.event_name == 'release' }}
        uses: jimmysawczuk/actions/github/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_upload_url.outputs.uploadURL }}
          asset_path: ./power-monitor-${{ steps.tag.outputs.tag }}-linux-amd64
          asset_name: power-monitor-${{ steps.tag.outputs.tag }}-linux-amd64
          asset_content_type: application/octet-stream
